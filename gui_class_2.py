# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'design_2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
import sys
import algo


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(857, 595)
        MainWindow.setFixedSize(860, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.csv_ip_line = QtWidgets.QLineEdit(self.centralwidget)
        self.csv_ip_line.setGeometry(QtCore.QRect(310, 130, 450, 25))
        self.csv_ip_line.setPlaceholderText("")
        self.csv_ip_line.setObjectName("csv_ip_line")

        self.csv_ip_label = QtWidgets.QLabel(self.centralwidget)
        self.csv_ip_label.setGeometry(QtCore.QRect(140, 140, 91, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.csv_ip_label.setFont(font)
        self.csv_ip_label.setScaledContents(True)
        self.csv_ip_label.setObjectName("csv_ip_label")

        self.img_dir_line = QtWidgets.QLineEdit(self.centralwidget)
        self.img_dir_line.setGeometry(QtCore.QRect(310, 190, 450, 25))
        self.img_dir_line.setObjectName("img_dir_line")

        self.img_dir_label = QtWidgets.QLabel(self.centralwidget)
        self.img_dir_label.setGeometry(QtCore.QRect(140, 200, 111, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.img_dir_label.setFont(font)
        self.img_dir_label.setScaledContents(True)
        self.img_dir_label.setObjectName("img_dir_label")


        self.kml_ip_label = QtWidgets.QLabel(self.centralwidget)
        self.kml_ip_label.setGeometry(QtCore.QRect(140, 250, 67, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.kml_ip_label.setFont(font)
        self.kml_ip_label.setScaledContents(True)
        self.kml_ip_label.setObjectName("kml_ip_label")

        self.kml_ip_line = QtWidgets.QLineEdit(self.centralwidget)
        self.kml_ip_line.setGeometry(QtCore.QRect(310, 240, 450, 25))
        self.kml_ip_line.setObjectName("kml_ip_line")

        self.c1_label = QtWidgets.QLabel(self.centralwidget)
        self.c1_label.setGeometry(QtCore.QRect(140, 310, 111, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.c1_label.setFont(font)
        self.c1_label.setScaledContents(True)
        self.c1_label.setObjectName("c1_label")

        self.c1_lat_line = QtWidgets.QLineEdit(self.centralwidget)
        self.c1_lat_line.setGeometry(QtCore.QRect(310, 300, 190, 25))
        self.c1_lat_line.setText("")
        self.c1_lat_line.setObjectName("c1_lat_line")

        self.c1_lon_line = QtWidgets.QLineEdit(self.centralwidget)
        self.c1_lon_line.setGeometry(QtCore.QRect(570, 300, 190, 25))
        self.c1_lon_line.setText("")
        self.c1_lon_line.setObjectName("c1_lon_line")

        self.c2_label = QtWidgets.QLabel(self.centralwidget)
        self.c2_label.setGeometry(QtCore.QRect(140, 360, 91, 17))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.c2_label.setFont(font)
        self.c2_label.setAcceptDrops(False)
        self.c2_label.setAutoFillBackground(False)
        self.c2_label.setScaledContents(True)
        self.c2_label.setObjectName("c2_label")

        self.c2_lat_line = QtWidgets.QLineEdit(self.centralwidget)
        self.c2_lat_line.setGeometry(QtCore.QRect(310, 360, 190, 25))
        self.c2_lat_line.setObjectName("c2_lat_line")

        self.c2_lon_line = QtWidgets.QLineEdit(self.centralwidget)
        self.c2_lon_line.setGeometry(QtCore.QRect(570, 360, 190, 25))
        self.c2_lon_line.setObjectName("c2_lon_line")

        self.submit_button = QtWidgets.QPushButton(self.centralwidget)
        self.submit_button.setGeometry(QtCore.QRect(449, 430, 170, 70))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.submit_button.setFont(font)
        self.submit_button.setObjectName("submit_button")

        self.msg = QMessageBox()
        self.msg.setWindowTitle("Error")

        MainWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 857, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.submit_button.clicked.connect(self.submit_clicked)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.csv_ip_label.setText(_translate("MainWindow", "Csv Input"))
        self.img_dir_label.setText(_translate("MainWindow", "Img directory"))
        self.kml_ip_label.setText(_translate("MainWindow", "Kml Input"))
        self.c1_label.setText(_translate("MainWindow", "Coordinate 1"))
        self.c2_label.setText(_translate("MainWindow", "Coordinate 2"))
        self.submit_button.setText(_translate("MainWindow", "SUBMIT"))
        self.set_placeholder_msg()
        # self.set_test_text()
        self.adjust_label_size()

    def adjust_label_size(self):
        self.csv_ip_label.adjustSize()
        self.img_dir_label.adjustSize()
        self.kml_ip_label.adjustSize()
        self.c1_label.adjustSize()
        self.c2_label.adjustSize()
        # self.submit_button.adjustSize()

    def set_placeholder_msg(self):
        self.csv_ip_line.setPlaceholderText("file path of csv file")

        self.img_dir_line.setPlaceholderText(
            "directory path containing images")

        self.kml_ip_line.setPlaceholderText("file path of kml file")
        self.c1_lat_line.setPlaceholderText("lat")
        self.c1_lon_line.setPlaceholderText("lon")
        self.c2_lat_line.setPlaceholderText("lat")
        self.c2_lon_line.setPlaceholderText("lon")

    def get_all_field(self):
        self.ip_field_data = list()
        self.ip_field_data.insert(0, self.csv_ip_line.text())
        self.ip_field_data.insert(1,
                                  self.img_dir_line.text())
        # self.ip_field_data.insert(2, self.kml_ip_line.text())
        self.ip_field_data.insert(2,"temporary_text")
        self.ip_field_data.insert(3, self.c1_lat_line.text())
        self.ip_field_data.insert(4, self.c1_lon_line.text())
        self.ip_field_data.insert(5, self.c2_lat_line.text())
        self.ip_field_data.insert(6, self.c2_lon_line.text())

    def clear_all_fields(self):
        self.csv_ip_line.setText("")
        self.img_dir_line.setText("")
        self.kml_ip_line.setText("")
        self.c1_lat_line.setText("")
        self.c1_lon_line.setText("")
        self.c2_lat_line.setText("")
        self.c2_lon_line.setText("")

    # Testing purpose
    def set_test_text(self):
        self.csv_ip_line.setText(
            "/home/vibi/Downloads/personal/DREAM/test/input_data/csv1.csv")
        self.img_dir_line.setText(
            "/home/vibi/Downloads/personal/DREAM/test/input_data/images")
        self.kml_ip_line.setText("test_kml_dir")
        self.c1_lat_line.setText("25.234581")
        self.c1_lon_line.setText("92.490524")
        self.c2_lat_line.setText("25.235609")
        self.c2_lon_line.setText("92.487755")

    def show_popup(self, var, txt_msg):
        self.msg.setText(txt_msg)
        self.msg.setIcon(var)
        self.msg.exec_()
        # self.clear_all_fields()
        # self.set_test_text()

    def print_details(self):
        print("csv file  : "+self.csv_ip_line.text())
        print("image dir : "+self.img_dir_line.text())
        print("kml file  : "+self.kml_ip_line.text())
        print("c1-> lat  : "+self.c1_lat_line.text())
        print("c1-> lon  : "+self.c1_lon_line.text())
        print("c2-> lat  : "+self.c2_lat_line.text())
        print("c2-> lon  : "+self.c2_lon_line.text())
        print("------------------------------")

    def submit_clicked(self):
        self.get_all_field()
        if "" in self.ip_field_data:
            self.show_popup(QMessageBox.Critical,
                            "One of the input field is empty.")
            return -1
        else:
            self.print_details()

            obj1 = algo.Isolate_img()

            get_input_stat = obj1.get_input_data(self.csv_ip_line.text(), self.img_dir_line.text(
            ), self.c1_lat_line.text(), self.c1_lon_line.text(), self.c2_lat_line.text(), self.c2_lon_line.text())
            if not get_input_stat == 1:
                self.show_popup(QMessageBox.Critical, get_input_stat)
                self.clear_all_fields()
                return -1

            get_create_process_dir_stat = obj1.make_process_dir()

            get_open_file_stat = obj1.open_files()
            if not get_open_file_stat == 1:
                self.show_popup(QMessageBox.Critical, get_open_file_stat)
                self.clear_all_fields()
                return -1
            get_read_csv_stat = obj1.read_csv()
            if not get_read_csv_stat == 1:
                self.show_popup(QMessageBox.Critical, get_read_csv_stat)
                self.clear_all_fields()
                return -1
            get_isolate_img_stat = obj1.isolate_image()
            if not get_isolate_img_stat == 1:
                self.show_popup(QMessageBox.Critical, get_isolate_img_stat)
                self.clear_all_fields()
                return -1
            get_close_file_stat = obj1.close_files()
            if not get_close_file_stat == 1:
                self.show_popup(QMessageBox.Critical, get_close_file_stat)
                self.clear_all_fields()
                return -1

            del obj1
            self.clear_all_fields()
            # self.set_test_text()
            print("------------------------------")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
